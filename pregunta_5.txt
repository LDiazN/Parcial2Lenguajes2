5.a) 
    Expandir la gramática usando la regla 
    B -> B1 => B2:

    B1.false <- B.true 
    B2.true  <- B.true
    B1.true  <- newlabel()
    B2.false <- B.false
    B.code   <- B1.code ++ label(B1.true) ++ B2.code

5.b)
    Construimos la implementación de la gramática anterior usando backpatching

    Creamos la nueva regla:
    M -> lambda
    M.instr = nextInstr

    Modificamos la regla original a:
    B -> B1 => M B2

    Y finalmente:
    backpatch(B1.truelist, M.instr)
    B.truelist  <- merge(B1.falselist, B2.truelist)
    B.falselist <- B2.falselist

5.c)
    Ahora usando la regla del while provista en el enunciado:
    S -> while B1 : S1 & B2 : S2

    start    <- newlabel()
    B1.true  <- newlabel()
    B2.true  <- newlabel()
    B1.false <- newlabel()
    B2.false <- S.next
    S1.next  <- start
    S2.next  <- start

    S.code   <- B1.code             ++ 
                label(B1.true)      ++
                S1.code             ++
                gen("goto", start)  ++ 
                label(B1.false)     ++
                B2.code             ++
                label(B2.true)      ++
                S2.code             ++
                gen("goto", start)

